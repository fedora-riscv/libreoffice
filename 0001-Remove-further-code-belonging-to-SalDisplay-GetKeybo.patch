From 9a7605b8f08dfcfbc99bc0c635014eac8e41e932 Mon Sep 17 00:00:00 2001
From: Thomas Arnhold <thomas@arnhold.org>
Date: Fri, 27 Jan 2012 19:33:03 +0100
Subject: [PATCH] Remove further code belonging to SalDisplay::GetKeyboardName

---
 vcl/Library_vclplug_gen.mk          |    1 -
 vcl/inc/unx/saldisp.hxx             |   10 --
 vcl/unx/generic/app/saldisp.cxx     |  127 --------------------
 vcl/unx/gtk/app/gtkdata.cxx         |    8 --
 5 files changed, 0 insertions(+), 364 deletions(-)

diff --git a/vcl/Library_vclplug_gen.mk b/vcl/Library_vclplug_gen.mk
index e402914..e29266d 100644
--- a/vcl/unx/source/app/makefile.mk
+++ b/vcl/unx/source/app/makefile.mk
@@ -53,7 +53,6 @@
             $(SLO)$/i18n_status.obj		\
             $(SLO)$/i18n_wrp.obj		\
             $(SLO)$/i18n_xkb.obj		\
-            $(SLO)$/keysymnames.obj		\
             $(SLO)$/randrwrapper.obj	\
             $(SLO)$/saldata.obj			\
             $(SLO)$/saldisp.obj			\
diff --git a/vcl/inc/unx/saldisp.hxx b/vcl/inc/unx/saldisp.hxx
index 8c44784..547f1f8 100644
--- a/vcl/unx/inc/saldisp.hxx
+++ b/vcl/unx/inc/saldisp.hxx
@@ -353,9 +353,6 @@
     srv_vendor_t	meServerVendor;
     SalWM			eWindowManager_;
     sal_uLong			nProperties_;		// PROPERTY_SUPPORT, BUG, FEATURE
-    sal_Bool			bLocal_;			// Server==Client? Init
-    // in SalDisplay::IsLocal()
-    sal_Bool			mbLocalIsValid;		// bLocal_ is valid ?
     // until x bytes
 
     oslMutex        hEventGuard_;
@@ -439,8 +436,6 @@
     XLIB_Cursor		GetPointer( int ePointerStyle );
     virtual int	CaptureMouse( SalFrame *pCapture );
 
-    sal_Bool			IsLocal();
-
     void			Remove( XEvent   *pEvent );
 
     virtual void          initScreen( int nScreen ) const;
diff --git a/vcl/unx/generic/app/saldisp.cxx b/vcl/unx/generic/app/saldisp.cxx
index cae3fafa..21812ce 100644
--- a/vcl/unx/source/app/saldisp.cxx
+++ b/vcl/unx/source/app/saldisp.cxx
@@ -234,122 +234,6 @@
 }
 
 // ---------------------------------------------------------------------------
-
-// check wether displaystring is in format N.M or N. or just N
-// with N and M beeing natural numbers
-static sal_Bool
-sal_IsDisplayNumber( const char *pDisplayString )
-{
-    if ( ! isdigit(*pDisplayString) )
-        return sal_False;
-    while ( isdigit(*(++pDisplayString)) )
-        ; /* do nothing */
-
-    if ( *pDisplayString == '.' )
-    {
-        while ( isdigit(*(++pDisplayString)) )
-            ; /* do nothing */
-    }
-
-    return (*pDisplayString == '\0');
-}
-
-// check whether host1 and host2 point to the same ip address
-static sal_Bool
-sal_EqualHosts( const OUString& Host1, const OUString& Host2)
-{
-    oslSocketAddr pHostAddr1;
-    oslSocketAddr pHostAddr2;
-    sal_Bool bEqualAddress = sal_False;
-
-    if ( Host1.toChar() >= '0' && Host1.toChar() <= '9' )
-        pHostAddr1 = osl_createInetSocketAddr( Host1.pData, 0 );
-    else
-        pHostAddr1 = osl_resolveHostname( Host1.pData );
-
-    if ( Host2.toChar() >= '0' && Host2.toChar() <= '9' )
-        pHostAddr2 = osl_createInetSocketAddr( Host2.pData, 0 );
-    else
-        pHostAddr2 = osl_resolveHostname( Host2.pData );
-
-    if( pHostAddr1 && pHostAddr2 )
-        bEqualAddress = osl_isEqualSocketAddr( pHostAddr1, pHostAddr2 ) ? sal_True : sal_False;
-
-    if( pHostAddr1 )
-        osl_destroySocketAddr( pHostAddr1 );
-    if( pHostAddr2 )
-        osl_destroySocketAddr( pHostAddr2 );
-
-    return bEqualAddress;
-}
-
-static sal_Bool
-sal_IsLocalDisplay( Display *pDisplay )
-{
-    const char *pDisplayString = DisplayString( pDisplay );
-
-    // no string, no idea
-    if (   pDisplayString == NULL || pDisplayString[ 0 ] == '\0')
-        return sal_False;
-
-    // check for ":x.y"
-    if ( pDisplayString[ 0 ] == ':' )
-        return sal_IsDisplayNumber( pDisplayString + 1 );
-
-    // check for fixed token which all mean localhost:x.y
-    const char  pLocal[]	= "localhost:";
-    const int   nLocalLen 	= sizeof(pLocal) - 1;
-    if ( strncmp(pDisplayString, pLocal, nLocalLen) == 0 )
-        return sal_IsDisplayNumber( pDisplayString + nLocalLen );
-
-    const char  pUnix[]		= "unix:";
-    const int   nUnixLen 	= sizeof(pUnix) - 1;
-    if ( strncmp(pDisplayString, pUnix, 	 nUnixLen)      == 0 )
-        return sal_IsDisplayNumber( pDisplayString + nUnixLen );
-
-    const char  pLoopback[] = "127.0.0.1:";
-    const int   nLoopbackLen= sizeof(pLoopback) - 1;
-    if ( strncmp(pDisplayString, pLoopback,	 nLoopbackLen)  == 0 )
-        return sal_IsDisplayNumber( pDisplayString + nLoopbackLen );
-
-    // compare local hostname to displaystring, both may be ip address or
-    // hostname
-    sal_Bool  bEqual = sal_False;
-    char *pDisplayHost 	= strdup(  pDisplayString );
-    char *pPtr 			= strrchr( pDisplayHost, ':' );
-
-    if( pPtr != NULL )
-    {
-        const OUString& rLocalHostname( GetX11SalData()->GetLocalHostName() );
-        if( rLocalHostname.getLength() )
-        {
-            *pPtr = '\0';
-            OUString aDisplayHostname( pDisplayHost, strlen( pDisplayHost ), osl_getThreadTextEncoding() );
-            bEqual = sal_EqualHosts( rLocalHostname, aDisplayHostname );
-            bEqual = bEqual && sal_IsDisplayNumber( pPtr + 1 );
-        }
-    }
-    free( pDisplayHost );
-
-    return bEqual;
-}
-
-// ---------------------------------------------------------------------------
-// IsLocal means soffice is running on the same host as the xserver
-// since it is not called very often and sal_IsLocalDisplay() is relative
-// expensive bLocal_ is initialized on first call
-
-sal_Bool SalDisplay::IsLocal()
-{
-    if ( ! mbLocalIsValid )
-    {
-        bLocal_ = sal_IsLocalDisplay( pDisp_ );
-        mbLocalIsValid = sal_True;
-    }
-    return (sal_Bool)bLocal_;
-}
-
-// ---------------------------------------------------------------------------
 extern "C" srv_vendor_t
 sal_GetServerVendor( Display *p_display )
 {
@@ -850,9 +734,6 @@
     X11SalBitmap::ImplCreateCache();
 
     hEventGuard_    = osl_createMutex();
-    bLocal_ 		= sal_False; /* dont care, initialize later by
-                                calling SalDisplay::IsLocal() */
-    mbLocalIsValid 	= sal_False; /* bLocal_ is not yet initialized */
 
     // - - - - - - - - - - Synchronize - - - - - - - - - - - - -
     if( getenv( "SAL_SYNCHRONIZE" ) )
diff --git a/vcl/unx/gtk/app/gtkdata.cxx b/vcl/unx/gtk/app/gtkdata.cxx
index b1bcf8e..e118f56 100644
--- a/vcl/unx/gtk/app/gtkdata.cxx
+++ b/vcl/unx/gtk/app/gtkdata.cxx
@@ -121,12 +121,6 @@
 
 extern "C" {
 
-void signalKeysChanged( GdkKeymap*, gpointer data )
-{
-    GtkSalDisplay* pDisp = (GtkSalDisplay*)data;
-#warning signalKeysChanged called
-}
-
 void signalScreenSizeChanged( GdkScreen* pScreen, gpointer data )
 {
     GtkSalDisplay* pDisp = (GtkSalDisplay*)data;
@@ -709,8 +703,6 @@
 
     m_pGtkSalDisplay->SetKbdExtension( pKbdExtension );
 
-    g_signal_connect( G_OBJECT(gdk_keymap_get_default()), "keys_changed", G_CALLBACK(signalKeysChanged), m_pGtkSalDisplay );
-    
     // add signal handler to notify screen size changes
     int nScreens = gdk_display_get_n_screens( pGdkDisp );
     for( int n = 0; n < nScreens; n++ )
