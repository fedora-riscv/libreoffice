From 0db09cb8b38b13a125050261fd64ff5318d30791 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Caol=C3=A1n=20McNamara?= <caolanm@redhat.com>
Date: Fri, 4 May 2018 17:15:37 +0100
Subject: [PATCH] Resolves: tdf#117413 char doubling appearing under X with
 gtk3

like happened on gtk2, so make the rhbz#1283420 bodge happen for XLIB surfaces,
regardless of the backend

Change-Id: Ic51679a71523e8cc76832858411b102d915638cf
---
 vcl/unx/generic/gdi/cairotextrender.cxx    | 22 +++++++++++++++++++++-
 vcl/unx/generic/gdi/x11cairotextrender.cxx | 16 +---------------
 2 files changed, 22 insertions(+), 16 deletions(-)

diff --git a/vcl/unx/generic/gdi/cairotextrender.cxx b/vcl/unx/generic/gdi/cairotextrender.cxx
index c1b4ff1..6d51d1f 100644
--- a/vcl/unx/generic/gdi/cairotextrender.cxx
+++ b/vcl/unx/generic/gdi/cairotextrender.cxx
@@ -164,6 +164,26 @@ namespace
     }
 }
 
+namespace
+{
+    cairo_t* syncCairoContext(cairo_t* cr)
+    {
+        //rhbz#1283420 tdf#117413 bodge to force a read from the underlying surface which has
+        //the side effect of making the mysterious xrender related problem go away
+        cairo_surface_t *target = cairo_get_target(cr);
+        if (cairo_surface_get_type(target) == CAIRO_SURFACE_TYPE_XLIB)
+        {
+            cairo_surface_t *throw_away = cairo_surface_create_similar(target, cairo_surface_get_content(target), 1, 1);
+            cairo_t *force_read_cr = cairo_create(throw_away);
+            cairo_set_source_surface(force_read_cr, target, 0, 0);
+            cairo_paint(force_read_cr);
+            cairo_destroy(force_read_cr);
+            cairo_surface_destroy(throw_away);
+        }
+        return cr;
+    }
+}
+
 void CairoTextRender::DrawTextLayout(const CommonSalLayout& rLayout)
 {
     const FreetypeFont& rFont = rLayout.getFontData();
@@ -204,7 +224,7 @@ void CairoTextRender::DrawTextLayout(const CommonSalLayout& rLayout)
      * least change the SalFrame etc impls to dtor the SalGraphics *before* the
      * destruction of the windows they reference
     */
-    cairo_t *cr = getCairoContext();
+    cairo_t *cr = syncCairoContext(getCairoContext());
     if (!cr)
     {
         SAL_WARN("vcl", "no cairo context for text");
diff --git a/vcl/unx/generic/gdi/x11cairotextrender.cxx b/vcl/unx/generic/gdi/x11cairotextrender.cxx
index 612b921..7ca4dfd 100644
--- a/vcl/unx/generic/gdi/x11cairotextrender.cxx
+++ b/vcl/unx/generic/gdi/x11cairotextrender.cxx
@@ -49,21 +49,7 @@ GlyphCache& X11CairoTextRender::getPlatformGlyphCache()
 
 cairo_t* X11CairoTextRender::getCairoContext()
 {
-    cairo_t *cr = mrParent.getCairoContext();
-
-    //rhbz#1283420 bodge to force a read from the underlying surface which has
-    //the side effect of making the mysterious xrender related problem go away
-    {
-        cairo_surface_t *target = cairo_get_target(cr);
-        cairo_surface_t *throw_away = cairo_surface_create_similar(target, cairo_surface_get_content(target), 1, 1);
-        cairo_t *force_read_cr = cairo_create(throw_away);
-        cairo_set_source_surface(force_read_cr, target, 0, 0);
-        cairo_paint(force_read_cr);
-        cairo_destroy(force_read_cr);
-        cairo_surface_destroy(throw_away);
-    }
-
-    return cr;
+    return mrParent.getCairoContext();
 }
 
 void X11CairoTextRender::getSurfaceOffset( double& nDX, double& nDY )
-- 
2.14.3

