From 92ce22450d4a140b368bf95ae6975887f3a30032 Mon Sep 17 00:00:00 2001
Message-Id: <92ce22450d4a140b368bf95ae6975887f3a30032.1430767502.git.erack@redhat.com>
From: Eike Rathke <erack@redhat.com>
Date: Mon, 4 May 2015 20:45:45 +0200
Subject: [PATCH] Resolves tdf#90757 ensure start row / end row order makes
 sense
MIME-Version: 1.0
Content-Type: multipart/mixed; boundary="------------erAck-patch-parts"

This is a multi-part message in MIME format.
--------------erAck-patch-parts
Content-Type: text/plain; charset=UTF-8; format=fixed
Content-Transfer-Encoding: 8bit


... in case the header is the only row.

(cherry picked from commit 46fa99f61aff88f1697959a9d3c41a5c3c3c05e9)

Conflicts:
	sc/source/ui/docshell/dbdocfun.cxx

Change-Id: I5e6046007a8d668f9834e108aaf8af0072629fc8
---
 sc/source/core/data/table3.cxx     |  9 ++++-----
 sc/source/ui/docshell/dbdocfun.cxx | 13 ++++++++-----
 2 files changed, 12 insertions(+), 10 deletions(-)


--------------erAck-patch-parts
Content-Type: text/x-patch; name="0001-Resolves-tdf-90757-ensure-start-row-end-row-order-ma.patch"
Content-Transfer-Encoding: 8bit
Content-Disposition: attachment; filename="0001-Resolves-tdf-90757-ensure-start-row-end-row-order-ma.patch"

diff --git a/sc/source/core/data/table3.cxx b/sc/source/core/data/table3.cxx
index daf370c..c9e9377 100644
--- a/sc/source/core/data/table3.cxx
+++ b/sc/source/core/data/table3.cxx
@@ -1429,11 +1429,10 @@ void ScTable::Sort(
         SCROW nLastRow = 0;
         for (SCCOL nCol = rSortParam.nCol1; nCol <= rSortParam.nCol2; nCol++)
             nLastRow = std::max(nLastRow, aCol[nCol].GetLastDataPos());
-        rSortParam.nRow2 = nLastRow = std::min(nLastRow, rSortParam.nRow2);
-        SCROW nRow1 = (rSortParam.bHasHeader ?
-            rSortParam.nRow1 + 1 : rSortParam.nRow1);
+        rSortParam.nRow2 = nLastRow = std::max( std::min(nLastRow, rSortParam.nRow2), rSortParam.nRow1);
+        SCROW nRow1 = (rSortParam.bHasHeader ? rSortParam.nRow1 + 1 : rSortParam.nRow1);
         aSortParam = rSortParam;    // must be assigned before calling IsSorted()
-        if (!IsSorted(nRow1, nLastRow))
+        if (nRow1 < nLastRow && !IsSorted(nRow1, nLastRow))
         {
             if(pProgress)
                 pProgress->SetState( 0, nLastRow-nRow1 );
@@ -1459,7 +1458,7 @@ void ScTable::Sort(
         SCCOL nCol1 = (rSortParam.bHasHeader ?
             rSortParam.nCol1 + 1 : rSortParam.nCol1);
         aSortParam = rSortParam;    // must be assigned before calling IsSorted()
-        if (!IsSorted(nCol1, nLastCol))
+        if (nCol1 < nLastCol && !IsSorted(nCol1, nLastCol))
         {
             if(pProgress)
                 pProgress->SetState( 0, nLastCol-nCol1 );
diff --git a/sc/source/ui/docshell/dbdocfun.cxx b/sc/source/ui/docshell/dbdocfun.cxx
index c4e81bc..cb132b6 100644
--- a/sc/source/ui/docshell/dbdocfun.cxx
+++ b/sc/source/ui/docshell/dbdocfun.cxx
@@ -531,10 +531,13 @@ bool ScDBDocFunc::Sort( SCTAB nTab, const ScSortParam& rSortParam,
 
     pDBData->SetSortParam(rSortParam);
 
-    ScRange aDirtyRange(
-        aLocalParam.nCol1, nStartRow, nTab,
-        aLocalParam.nCol2, aLocalParam.nRow2, nTab);
-    pDoc->SetDirty( aDirtyRange, true );
+    if (nStartRow <= aLocalParam.nRow2)
+    {
+        ScRange aDirtyRange(
+                aLocalParam.nCol1, nStartRow, nTab,
+                aLocalParam.nCol2, aLocalParam.nRow2, nTab);
+        pDoc->SetDirty( aDirtyRange, true );
+    }
 
     if (bPaint)
     {
@@ -552,7 +555,7 @@ bool ScDBDocFunc::Sort( SCTAB nTab, const ScSortParam& rSortParam,
         rDocShell.PostPaint(ScRange(nStartX, nStartY, nTab, nEndX, nEndY, nTab), nPaint);
     }
 
-    if (!bUniformRowHeight)
+    if (!bUniformRowHeight && nStartRow <= aLocalParam.nRow2)
         rDocShell.AdjustRowHeight(nStartRow, aLocalParam.nRow2, nTab);
 
     aModificator.SetDocumentModified();

--------------erAck-patch-parts--


