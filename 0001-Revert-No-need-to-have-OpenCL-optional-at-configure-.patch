From 764836cb00e8e6dfd2ab48e080a166ec90359e01 Mon Sep 17 00:00:00 2001
From: David Tardon <dtardon@redhat.com>
Date: Sun, 7 Dec 2014 21:48:55 +0100
Subject: [PATCH] Revert "No need to have OpenCL optional at configure-time"

As long as this requires bundling clcc, not allowing to disable it is
unacceptable.

This reverts commit 3b0b76462aa54f60bc9823d9c6ef64e5e35c1208.

Conflicts:
	configure.ac

Change-Id: I12b3d5e3325bbd03cd98e1fb5139705d694493c2
---
 configure.ac                           | 14 +++++++++++++-
 sc/CppunitTest_sc_opencl_test.mk       |  2 +-
 sc/Module_sc.mk                        |  2 +-
 sc/source/ui/optdlg/calcoptionsdlg.hxx |  2 ++
 4 files changed, 17 insertions(+), 3 deletions(-)

diff --git a/configure.ac b/configure.ac
index b6ae6db..e969fbf 100644
--- a/configure.ac
+++ b/configure.ac
@@ -1096,6 +1096,10 @@ AC_ARG_ENABLE(cairo-canvas,
                           platforms where Cairo is available.
 ])
 
+AC_ARG_ENABLE(opencl,
+    AS_HELP_STRING([--disable-opencl],
+        [Determines whether to build with OpenCL support.]))
+
 AC_ARG_ENABLE(dbus,
     AS_HELP_STRING([--disable-dbus],
         [Determines whether to enable features that depend on dbus.
@@ -10263,13 +10267,21 @@ dnl =================================================
 dnl Check whether to build with OpenCL support.
 dnl =================================================
 
-if test $_os != iOS -a $_os != Android; then
+AC_MSG_CHECKING([whether to build with the OpenCL support.])
+ENABLE_OPENCL=
+
+if test $_os != iOS -a $_os != Android -a "x$enable_opencl" != "xno"; then
+    AC_MSG_RESULT([yes])
     # CLCC in BUILD_TYPE tells that we are building a bundled clcc (just the clew part), OPENCL in
     # BUILD_TYPE tells that OpenCL is potentially available on the platform (optional at run-time,
     # used through clew).
     BUILD_TYPE="$BUILD_TYPE CLCC OPENCL"
+    ENABLE_OPENCL=TRUE
     AC_DEFINE(HAVE_FEATURE_OPENCL)
+else
+    AC_MSG_RESULT([no])
 fi
+AC_SUBST(ENABLE_OPENCL)
 
 dnl ===================================================================
 dnl Check whether to enable glTF support
diff --git a/sc/CppunitTest_sc_opencl_test.mk b/sc/CppunitTest_sc_opencl_test.mk
index 65aedde..76061ad 100644
--- a/sc/CppunitTest_sc_opencl_test.mk
+++ b/sc/CppunitTest_sc_opencl_test.mk
@@ -15,7 +15,7 @@ $(eval $(call gb_CppunitTest_add_exception_objects,sc_opencl_test, \
 
 $(eval $(call gb_CppunitTest_use_externals,sc_opencl_test, \
 	boost_headers \
-	clew \
+	$(call gb_Helper_optional,OPENCL,clew) \
 	mdds_headers \
 	orcus \
 	orcus-parser \
diff --git a/sc/Module_sc.mk b/sc/Module_sc.mk
index 9385dc5..3bf84cd 100644
--- a/sc/Module_sc.mk
+++ b/sc/Module_sc.mk
@@ -54,7 +54,7 @@ $(eval $(call gb_Module_add_slowcheck_targets,sc, \
     CppunitTest_sc_subsequent_filters_test \
     CppunitTest_sc_subsequent_export_test \
     CppunitTest_sc_html_export_test \
-    CppunitTest_sc_opencl_test \
+    $(call gb_Helper_optional,OPENCL,CppunitTest_sc_opencl_test) \
 ))
 
 # Disabled to allow the check tinderbox execute the sd tests
diff --git a/sc/source/ui/optdlg/calcoptionsdlg.hxx b/sc/source/ui/optdlg/calcoptionsdlg.hxx
index c7bfe4d..b56b4c1 100644
--- a/sc/source/ui/optdlg/calcoptionsdlg.hxx
+++ b/sc/source/ui/optdlg/calcoptionsdlg.hxx
@@ -64,8 +64,10 @@ private:
     OUString toString(sal_Int32 nVal) const;
     SvTreeListEntry *createItem(const OUString &rCaption, const OUString& sValue) const;
     void     setValueAt(size_t nPos, const OUString &rString);
+#if HAVE_FEATURE_OPENCL
     OpenCLConfig::ImplMatcherSet& CurrentWhiteOrBlackList();
     const OpenCLConfig::ImplMatcher& CurrentWhiteOrBlackListEntry();
+#endif
 
 private:
     SvxCheckListBox* mpLbSettings;
-- 
2.1.0

