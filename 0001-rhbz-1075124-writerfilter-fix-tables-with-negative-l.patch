From 2e558f32ef79948858723b9781fbd388850b462b Mon Sep 17 00:00:00 2001
From: Michael Stahl <mstahl@redhat.com>
Date: Tue, 11 Mar 2014 22:36:35 +0100
Subject: [PATCH] rhbz#1075124: writerfilter: fix tables with negative left
 margin
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

SvxBoxItem::nLeftDist is unsigned; the bugdoc sets a very large value
due to wrap-around which causes the table content not to be displayed.

DomainMapperTableHandler::endTableGetTableStyle() tweaks the
rInfo.nLeftBorderDistance by adding half the border line width to it,
which makes it positive; at that point the value has already been used
to init table::TableBorderDistances, so move that downward so it gets
the positive value too.

Change-Id: Ied2331b93f2e95845d7e8b2cc06e89e1ab24296e
(cherry picked from commit 76aa23c59b4c81ea7b9d974a1a0a9e39c6bf8741)
Reviewed-on: https://gerrit.libreoffice.org/8537
Reviewed-by: Caolán McNamara <caolanm@redhat.com>
Tested-by: Caolán McNamara <caolanm@redhat.com>
---
 sw/qa/extras/ooxmlimport/data/rhbz1075124.docx     | Bin 0 -> 4216 bytes
 sw/qa/extras/ooxmlimport/ooxmlimport.cxx           |  16 ++++++++++++++
 .../source/dmapper/DomainMapperTableHandler.cxx    |  24 ++++++++++-----------
 .../source/dmapper/TablePropertiesHandler.cxx      |   4 ++--
 4 files changed, 30 insertions(+), 14 deletions(-)
 create mode 100644 sw/qa/extras/ooxmlimport/data/rhbz1075124.docx

diff --git a/sw/qa/extras/ooxmlimport/data/rhbz1075124.docx b/sw/qa/extras/ooxmlimport/data/rhbz1075124.docx
new file mode 100644
index 0000000000000000000000000000000000000000..3b3170101718c2351684a1e0bcd829a463afc852
GIT binary patch
literal 4216
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
Jz>=K)`ww4o0=obJ

literal 0
HcmV?d00001

diff --git a/sw/qa/extras/ooxmlimport/ooxmlimport.cxx b/sw/qa/extras/ooxmlimport/ooxmlimport.cxx
index 5e161cc..1a2ee5f 100644
--- a/sw/qa/extras/ooxmlimport/ooxmlimport.cxx
+++ b/sw/qa/extras/ooxmlimport/ooxmlimport.cxx
@@ -40,6 +40,7 @@
 #include <com/sun/star/view/XFormLayerAccess.hpp>
 #include <com/sun/star/table/BorderLine2.hpp>
 #include <com/sun/star/table/TableBorder2.hpp>
+#include <com/sun/star/table/TableBorderDistances.hpp>
 #include <com/sun/star/text/SizeType.hpp>
 #include <com/sun/star/xml/dom/XDocument.hpp>
 
@@ -201,6 +202,21 @@ DECLARE_OOXMLIMPORT_TEST(testRhbz988516, "rhbz988516.docx")
             getProperty<OUString>(getParagraph(3), "NumberingStyleName"));
 }
 
+DECLARE_OOXMLIMPORT_TEST(testRhbz1075124, "rhbz1075124.docx")
+{
+    // negative left margin on table wrapped around to 64k unsigned
+    uno::Reference<text::XTextTablesSupplier> xTablesSupplier(mxComponent,
+            uno::UNO_QUERY);
+    uno::Reference<container::XIndexAccess> xTables(
+            xTablesSupplier->getTextTables(), uno::UNO_QUERY);
+    CPPUNIT_ASSERT_EQUAL(sal_Int32(-243),
+            getProperty<sal_Int32>(xTables->getByIndex(0), "LeftMargin"));
+    table::TableBorderDistances dists(
+            getProperty<table::TableBorderDistances>(xTables->getByIndex(0),
+                "TableBorderDistances"));
+    CPPUNIT_ASSERT_EQUAL(sal_Int16(26), dists.LeftDistance);
+}
+
 DECLARE_OOXMLIMPORT_TEST(testFdo49940, "fdo49940.docx")
 {
     uno::Reference<text::XTextDocument> xTextDocument(mxComponent, uno::UNO_QUERY);
diff --git a/writerfilter/source/dmapper/DomainMapperTableHandler.cxx b/writerfilter/source/dmapper/DomainMapperTableHandler.cxx
index 0827cc9..64289c4 100644
--- a/writerfilter/source/dmapper/DomainMapperTableHandler.cxx
+++ b/writerfilter/source/dmapper/DomainMapperTableHandler.cxx
@@ -406,18 +406,6 @@ TableStyleSheetEntry * DomainMapperTableHandler::endTableGetTableStyle(TableInfo
         m_aTableProperties->getValue( TablePropertyMap::CELL_MAR_BOTTOM,
                                      rInfo.nBottomBorderDistance );
 
-        table::TableBorderDistances aDistances;
-        aDistances.IsTopDistanceValid =
-        aDistances.IsBottomDistanceValid =
-        aDistances.IsLeftDistanceValid =
-        aDistances.IsRightDistanceValid = sal_True;
-        aDistances.TopDistance = static_cast<sal_Int16>( rInfo.nTopBorderDistance );
-        aDistances.BottomDistance = static_cast<sal_Int16>( rInfo.nBottomBorderDistance );
-        aDistances.LeftDistance = static_cast<sal_Int16>( rInfo.nLeftBorderDistance );
-        aDistances.RightDistance = static_cast<sal_Int16>( rInfo.nRightBorderDistance );
-
-        m_aTableProperties->Insert( PROP_TABLE_BORDER_DISTANCES, uno::makeAny( aDistances ) );
-
         if (rFrameProperties.hasElements())
             lcl_DecrementHoriOrientPosition(rFrameProperties, rInfo.nLeftBorderDistance);
 
@@ -477,6 +465,18 @@ TableStyleSheetEntry * DomainMapperTableHandler::endTableGetTableStyle(TableInfo
         lcl_debug_TableBorder(aTableBorder);
 #endif
 
+        table::TableBorderDistances aDistances;
+        aDistances.IsTopDistanceValid =
+        aDistances.IsBottomDistanceValid =
+        aDistances.IsLeftDistanceValid =
+        aDistances.IsRightDistanceValid = sal_True;
+        aDistances.TopDistance = static_cast<sal_Int16>( rInfo.nTopBorderDistance );
+        aDistances.BottomDistance = static_cast<sal_Int16>( rInfo.nBottomBorderDistance );
+        aDistances.LeftDistance = static_cast<sal_Int16>( rInfo.nLeftBorderDistance );
+        aDistances.RightDistance = static_cast<sal_Int16>( rInfo.nRightBorderDistance );
+
+        m_aTableProperties->Insert( PROP_TABLE_BORDER_DISTANCES, uno::makeAny( aDistances ) );
+
         // Table position in Office is computed in 2 different ways :
         // - top level tables: the goal is to have in-cell text starting at table indent pos (tblInd),
         //   so table's position depends on table's cells margin
diff --git a/writerfilter/source/dmapper/TablePropertiesHandler.cxx b/writerfilter/source/dmapper/TablePropertiesHandler.cxx
index 6854f92..7a6eab6 100644
--- a/writerfilter/source/dmapper/TablePropertiesHandler.cxx
+++ b/writerfilter/source/dmapper/TablePropertiesHandler.cxx
@@ -307,8 +307,8 @@ namespace dmapper {
                    if (m_pCurrentInteropGrabBag)
                        m_pCurrentInteropGrabBag->push_back(pHandler->getInteropGrabBag());
                    TablePropertyMapPtr pTblIndMap(new TablePropertyMap);
-                   sal_uInt32 nTblInd = pHandler->getMeasureValue();
-                   pTblIndMap->setValue( TablePropertyMap::LEFT_MARGIN, nTblInd);
+                   sal_Int32 nTblInd = pHandler->getMeasureValue();
+                   pTblIndMap->setValue(TablePropertyMap::LEFT_MARGIN, nTblInd);
                    insertTableProps(pTblIndMap);
                }
            }
-- 
1.8.3.1

