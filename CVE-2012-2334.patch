--- libreoffice-3.4.5.2/filter/source/msfilter/msdffimp.cxx	2012-05-24 14:44:08.560797178 +0100
+++ libreoffice-3.4.5.2/filter/source/msfilter/msdffimp.cxx	2012-05-24 14:50:37.005251626 +0100
@@ -3592,6 +3592,8 @@
         rSt >> aHd;
         if (!lclGood(rSt))
             break;
+        if (aHd.nRecLen > nMaxLegalDffRecordLength)
+            break;
         if ( aHd.nRecType == nRecId )
         {
             if ( nSkipCount )
@@ -6216,6 +6218,9 @@
                     rStCtrl.Seek(nStCtrlCurr);
                     mnIdClusters = std::min(nMaxEntriesPossible, static_cast<sal_Size>(mnIdClusters));
 
+                    sal_Size nMaxEntriesAllocatable = SAL_MAX_INT32 / sizeof(FIDCL);
+                    mnIdClusters = std::min(nMaxEntriesAllocatable, static_cast<sal_Size>(mnIdClusters));
+
                     mpFidcls = new FIDCL[ mnIdClusters ];
                     memset(mpFidcls, 0, mnIdClusters * sizeof(FIDCL));
                     for (sal_uInt32 i = 0; i < mnIdClusters; ++i)
@@ -7016,9 +7021,6 @@
                                                     rRec.nRecLen );
 }
 
-
-sal_uInt32 nMaxLegalRecordLength = SAL_MAX_UINT32 - DFF_COMMON_RECORD_HEADER_SIZE;
-
 /* auch static */
 sal_Bool SvxMSDffManager::ReadCommonRecordHeader( SvStream& rSt,
                                               sal_uInt8&     rVer,
@@ -7032,7 +7034,7 @@
     rInst = nTmp >> 4;
     if (!lclGood(rSt))
         return false;
-    if (rLength > nMaxLegalRecordLength)
+    if (rLength > nMaxLegalDffRecordLength)
         return false;
     return true;
 }
--- libreoffice-3.4.5.2/svx/inc/svx/msdffdef.hxx	2012-05-24 14:44:09.966814174 +0100
+++ libreoffice-3.4.5.2/svx/inc/svx/msdffdef.hxx	2012-05-24 14:48:57.736151315 +0100
@@ -39,6 +39,9 @@
 
 #define DFF_COMMON_RECORD_HEADER_SIZE			8
 
+const sal_uInt32 nMaxLegalDffRecordLength = \
+  SAL_MAX_UINT32 - DFF_COMMON_RECORD_HEADER_SIZE;
+
 #define DFF_PSFLAG_CONTAINER 0x0F         // If the version field of a record
                                           //  header takes on this value, the
                                           //  record header marks the start of
